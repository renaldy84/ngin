var ndns = require('../lib/ndns');
var sys = require('sys');

var ns_c = ndns.ns_c;
var ns_t = ndns.ns_t;

var root = new ndns.Message ();

root.addQuestion(".", ns_c.in, ns_t.ns);
root.addRR("A.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "198.41.0.4");
root.addRR("A.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.aaaa, "2001:503:BA3E:0:0:0:2:30");
root.addRR("B.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "192.228.79.201");
root.addRR("C.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "192.33.4.12");
root.addRR("D.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "128.8.10.90");
root.addRR("E.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "192.203.230.10");
root.addRR("F.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "192.5.5.241");
root.addRR("F.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.aaaa, "2001:500:2F:0:0:0:0:F");
root.addRR("G.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "192.112.36.4");
root.addRR("H.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "128.63.2.53");
root.addRR("H.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.aaaa, "2001:500:1:0:0:0:803F:235");
root.addRR("I.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "192.36.148.17");
root.addRR("I.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.aaaa, "2001:7FE:0:0:0:0:0:53");
root.addRR("J.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "192.58.128.30");
root.addRR("J.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.aaaa, "2001:503:C27:0:0:0:2:30");
root.addRR("K.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "193.0.14.129");
root.addRR("K.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.aaaa, "2001:7FD:0:0:0:0:0:1");
root.addRR("L.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "199.7.83.42");
root.addRR("L.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.aaaa, "2001:500:3:0:0:0:0:42");
root.addRR("M.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.a, "202.12.27.33");
root.addRR("M.ROOT-SERVERS.NET.", 3600000, ns_c.in, ns_t.aaaa, "2001:DC3:0:0:0:0:0:35");

var client4 = ndns.createClient('udp4');
var client6 = ndns.createClient('udp6');

var server = ndns.createServer('udp4', function(req, res) {
    Array.prototype.forEach.call(req.q, function (q) {
	if (q.name == "." && q.class == ns_c.in && q.type == ns_t.ns) {
	    root.setHeader(req.header);
	    root.header.qr = 1;
	    root.header.aa = 1;
	    root.header.rd = 0;
	    root.header.ra = 0;
	    root.header.ancount = root.rr.length;
	    res.send(root);
	}
    });
}).bind(53);
