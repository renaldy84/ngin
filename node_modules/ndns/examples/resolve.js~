var sys = require('sys'), puts = sys.puts;
var dgram = require('dgram');
var ndns = require('../lib/ndns');
var server = ndns.createServer('udp4');
var client = ndns.createClient('udp4');
var resolver = new Client('udp4');
resolver.bind();

var LOCAL_PORT = 53;
var REMOTE_HOST = "130.244.127.169"
var REMOTE_PORT = 53;

function resolve (domain, rrtype, cb) {
    var req = resolver.request(REMOTE_PORT, REMOTE_HOST);

    rrtype = rrtype.toUpperCase();

    req.setHeader({
	id: 1992,
	rd: 1,
	qdcount: 1});
    req.addQuestion (domain, rrtype, "IN");
    req.send();

    req.on("response", function (res) {
	if (res.header.opcode == ns_r_noerror) {
	    var addrs = [];
	    for (var i = 0; i < res.rr.length; i++) {
		var rr = res.rr[i];
		if (rr.typeName != rrtype)
		    continue;
		if (rr.rdata.length == 1)
		    addrs.push(rr.rdata[0]);
		else
		    addrs.push(rr.rdata);
	    }
	    cb (null, addrs);
	}
	else {
	    cb (new Error());
	}
    });
}
exports.resolve = resolve;

(function (tmp) {
    exports.resolve4 = tmp("A");

    exports.resolve6 = tmp("AAAA");
    
    exports.resolveMX = tmp("MX");
}) (function (rrtype) {
    return function (domain, cb) {
	resolve(domain, rrtype, cb);
    };
});    

exports.resolveMX('loopia.se', function (err, addrs) {
    debug(sys.inspect(addrs));
});